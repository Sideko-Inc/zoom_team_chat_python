"""File Generated by Sideko (sideko.dev)"""

import pytest
from zoom_team_chat import Client, AsyncClient
from os import getenv
from pydantic import TypeAdapter
from zoom_team_chat.types.chat.channel.member import models

# test sync & async methods (keep comment for code generation)


def test_invite_201_generated_success_default():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.channel.member.invite(
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        data={"members": [{"email": "user@zoom\.us"}]},
    )
    adapter = TypeAdapter(models.PostChatChannelsChannelIdMembersResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_invite_201_generated_success_default():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.channel.member.invite(
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        data={"members": [{"email": "user@zoom\.us"}]},
    )
    adapter = TypeAdapter(models.PostChatChannelsChannelIdMembersResponse)
    adapter.validate_python(response)


def test_list_200_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.channel.member.list(
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        next_page_token="R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
        page_size=10,
    )
    adapter = TypeAdapter(models.GetChatChannelsChannelIdMembersResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_list_200_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.channel.member.list(
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        next_page_token="R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
        page_size=10,
    )
    adapter = TypeAdapter(models.GetChatChannelsChannelIdMembersResponse)
    adapter.validate_python(response)


def test_delete_204_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.channel.member.delete(
        channel_id="825c9e31f1064c73b394c5e4557d3447", identifier="jchill@example\.com"
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_delete_204_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.channel.member.delete(
        channel_id="825c9e31f1064c73b394c5e4557d3447", identifier="jchill@example\.com"
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)


def test_batch_delete_204_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.channel.member.batch_delete(
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        member_ids="zqmgs2tmspguoqcxyahsya,R4VM29Oj0fVM2hhEmSKVM2hhezJTezJTKVM2hezJT2hezJ",
        user_ids="zqmgs2tmspguoqcxyahsya,R4VM29Oj0fVM2hhEmSKVM2hhezJTezJTKVM2hezJT2hezJ",
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_batch_delete_204_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.channel.member.batch_delete(
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        member_ids="zqmgs2tmspguoqcxyahsya,R4VM29Oj0fVM2hhEmSKVM2hhezJTezJTKVM2hezJT2hezJ",
        user_ids="zqmgs2tmspguoqcxyahsya,R4VM29Oj0fVM2hhEmSKVM2hhezJTezJTKVM2hezJT2hezJ",
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)
