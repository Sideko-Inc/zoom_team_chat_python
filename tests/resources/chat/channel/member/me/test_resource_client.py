"""File Generated by Sideko (sideko.dev)"""

import pytest
from zoom_team_chat import Client, AsyncClient
from os import getenv
from pydantic import TypeAdapter
from zoom_team_chat.types.chat.channel.member.me import models

# test sync & async methods (keep comment for code generation)


def test_join_201_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.channel.member.me.join(
        channel_id="825c9e31f1064c73b394c5e4557d3447"
    )
    adapter = TypeAdapter(models.PostChatChannelsChannelIdMembersMeResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_join_201_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.channel.member.me.join(
        channel_id="825c9e31f1064c73b394c5e4557d3447"
    )
    adapter = TypeAdapter(models.PostChatChannelsChannelIdMembersMeResponse)
    adapter.validate_python(response)


def test_leave_204_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.channel.member.me.leave(
        channel_id="825c9e31f1064c73b394c5e4557d3447"
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_leave_204_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.channel.member.me.leave(
        channel_id="825c9e31f1064c73b394c5e4557d3447"
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)
