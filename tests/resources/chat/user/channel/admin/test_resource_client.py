"""File Generated by Sideko (sideko.dev)"""

import pytest
from zoom_team_chat import Client, AsyncClient
from os import getenv
from pydantic import TypeAdapter
from zoom_team_chat.types.chat.user.channel.admin import models

# test sync & async methods (keep comment for code generation)


def test_promote_201_generated_success_default():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.user.channel.admin.promote(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        data={"admins": [{"email": "jchill@example\.com"}]},
    )
    adapter = TypeAdapter(models.PostChatUsersUserIdChannelsChannelIdAdminsResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_promote_201_generated_success_default():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.user.channel.admin.promote(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        data={"admins": [{"email": "jchill@example\.com"}]},
    )
    adapter = TypeAdapter(models.PostChatUsersUserIdChannelsChannelIdAdminsResponse)
    adapter.validate_python(response)


def test_list_200_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.user.channel.admin.list(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        next_page_token="R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
        page_size=10,
    )
    adapter = TypeAdapter(models.GetChatUsersUserIdChannelsChannelIdAdminsResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_list_200_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.user.channel.admin.list(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        next_page_token="R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
        page_size=10,
    )
    adapter = TypeAdapter(models.GetChatUsersUserIdChannelsChannelIdAdminsResponse)
    adapter.validate_python(response)


def test_demote_204_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.user.channel.admin.demote(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        admin_ids="zqmgs2tmspguoqcxyahsya,za7AvP7o9AxypYwpaKYsOJ2K3VwXBZn4JtxgPGk8Lf7_1w",
        user_ids="zqmgs2tmspguoqcxyahsya,R4VM29Oj0fVM2hhEmSKVM2hhezJTezJTKVM2hezJT2hezJ",
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_demote_204_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.user.channel.admin.demote(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        channel_id="825c9e31f1064c73b394c5e4557d3447",
        admin_ids="zqmgs2tmspguoqcxyahsya,za7AvP7o9AxypYwpaKYsOJ2K3VwXBZn4JtxgPGk8Lf7_1w",
        user_ids="zqmgs2tmspguoqcxyahsya,R4VM29Oj0fVM2hhEmSKVM2hhezJTezJTKVM2hezJT2hezJ",
    )
    adapter = TypeAdapter(None)
    adapter.validate_python(response)
