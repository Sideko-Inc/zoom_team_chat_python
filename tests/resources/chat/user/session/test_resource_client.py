"""File Generated by Sideko (sideko.dev)"""

import pytest
from zoom_team_chat import AsyncClient, Client
from os import getenv
import typing
from zoom_team_chat.types.chat.user.session import models
from pydantic import TypeAdapter

# test sync & async methods (keep comment for code generation)


def test_list_200_generated_success():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.user.session.list(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        from_query="2020\-02\-10T21:39:50Z",
        next_page_token="R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
        page_size=10,
        search_star=True,
        to="2020\-02\-15T12:00:00Z",
        type="1:1",
    )
    adapter = TypeAdapter(
        typing.Union[
            models.GetChatUsersUserIdSessionsResponseObj0,
            models.GetChatUsersUserIdSessionsResponseObj1,
        ]
    )
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_list_200_generated_success():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.user.session.list(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        from_query="2020\-02\-10T21:39:50Z",
        next_page_token="R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
        page_size=10,
        search_star=True,
        to="2020\-02\-15T12:00:00Z",
        type="1:1",
    )
    adapter = TypeAdapter(
        typing.Union[
            models.GetChatUsersUserIdSessionsResponseObj0,
            models.GetChatUsersUserIdSessionsResponseObj1,
        ]
    )
    adapter.validate_python(response)
