"""File Generated by Sideko (sideko.dev)"""

import pytest
from zoom_team_chat import AsyncClient, Client
from os import getenv
from zoom_team_chat.types.chat.user.file import models
from pydantic import TypeAdapter

# test sync & async methods (keep comment for code generation)


def test_send_201_generated_success_default():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.user.file.send(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        data={
            "files": [open("tests/fixtures/file.pdf", "rb")],
            "reply_main_message_id": "8cfaf567\-bf5a\-4acc\-b4f2\-88b3d371aca5",
            "to_channel": "825c9e31f1064c73b394c5e4557d3447",
            "to_contact": "za7AvP7o9AxypYwpaKYsOJ2K3VwXBZn4JtxgPGk8Lf7_1w",
        },
    )
    adapter = TypeAdapter(models.PostChatUsersUserIdMessagesFilesResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_send_201_generated_success_default():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.user.file.send(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        data={
            "files": [open("tests/fixtures/file.pdf", "rb")],
            "reply_main_message_id": "8cfaf567\-bf5a\-4acc\-b4f2\-88b3d371aca5",
            "to_channel": "825c9e31f1064c73b394c5e4557d3447",
            "to_contact": "za7AvP7o9AxypYwpaKYsOJ2K3VwXBZn4JtxgPGk8Lf7_1w",
        },
    )
    adapter = TypeAdapter(models.PostChatUsersUserIdMessagesFilesResponse)
    adapter.validate_python(response)


def test_upload_201_generated_success_default():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(token=getenv("API_TOKEN"))
    response = client.chat.user.file.upload(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        data={"file": open("tests/fixtures/file.pdf", "rb")},
    )
    adapter = TypeAdapter(models.PostChatUsersUserIdFilesResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_upload_201_generated_success_default():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(token=getenv("API_TOKEN"))
    response = await client.chat.user.file.upload(
        user_id="v4iyWT1LTfy8QvPG4GTvdg",
        data={"file": open("tests/fixtures/file.pdf", "rb")},
    )
    adapter = TypeAdapter(models.PostChatUsersUserIdFilesResponse)
    adapter.validate_python(response)
