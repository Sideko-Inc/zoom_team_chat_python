"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GetContactsResponseContactsItemPhoneNumbersItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    code: typing.Optional[str] = _PydanticField(alias="code", default=None)
    country: typing.Optional[str] = _PydanticField(alias="country", default=None)
    label: typing.Optional[
        typing_extensions.Literal["Mobile", "Office", "Home", "Fax"]
    ] = _PydanticField(alias="label", default=None)
    number: typing.Optional[str] = _PydanticField(alias="number", default=None)
    verified: typing.Optional[bool] = _PydanticField(alias="verified", default=None)


class GetContactsResponseContactsItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    contact_type: typing.Optional[int] = _PydanticField(
        alias="contact_type", default=None
    )
    dept: typing.Optional[str] = _PydanticField(alias="dept", default=None)
    direct_numbers: typing.Optional[typing.List[str]] = _PydanticField(
        alias="direct_numbers", default=None
    )
    email: typing.Optional[str] = _PydanticField(alias="email", default=None)
    extension_number: typing.Optional[str] = _PydanticField(
        alias="extension_number", default=None
    )
    display_name: typing.Optional[str] = _PydanticField(
        alias="display_name", default=None
    )
    first_name: typing.Optional[str] = _PydanticField(alias="first_name", default=None)
    id: typing.Optional[str] = _PydanticField(alias="id", default=None)
    member_id: typing.Optional[str] = _PydanticField(alias="member_id", default=None)
    im_group_id: typing.Optional[str] = _PydanticField(
        alias="im_group_id", default=None
    )
    im_group_name: typing.Optional[str] = _PydanticField(
        alias="im_group_name", default=None
    )
    job_title: typing.Optional[str] = _PydanticField(alias="job_title", default=None)
    last_name: typing.Optional[str] = _PydanticField(alias="last_name", default=None)
    location: typing.Optional[str] = _PydanticField(alias="location", default=None)
    phone_number: typing.Optional[str] = _PydanticField(
        alias="phone_number", default=None
    )
    phone_numbers: typing.Optional[
        typing.List[GetContactsResponseContactsItemPhoneNumbersItem]
    ] = _PydanticField(alias="phone_numbers", default=None)
    presence_status: typing.Optional[
        typing_extensions.Literal["Do_Not_Disturb", "Away", "Available", "Offline"]
    ] = _PydanticField(alias="presence_status", default=None)
    user_status: typing.Optional[typing_extensions.Literal["active", "inactive"]] = (
        _PydanticField(alias="user_status", default=None)
    )
    activity: typing.Optional[
        typing_extensions.Literal["Active", "Inactive", "Unknown"]
    ] = _PydanticField(alias="activity", default=None)
    sip_phone_number: typing.Optional[str] = _PydanticField(
        alias="sip_phone_number", default=None
    )
    sip_uri: typing.Optional[str] = _PydanticField(alias="sip_uri", default=None)


class GetContactsResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    contacts: typing.Optional[typing.List[GetContactsResponseContactsItem]] = (
        _PydanticField(alias="contacts", default=None)
    )
    next_page_token: typing.Optional[str] = _PydanticField(
        alias="next_page_token", default=None
    )
    page_size: typing.Optional[int] = _PydanticField(alias="page_size", default=None)
