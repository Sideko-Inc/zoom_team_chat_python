"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostChatMigrationUsersIdentifierEventsBodyParamsItem(typing_extensions.TypedDict):
    """
    No description specified
    """

    target_id: typing_extensions.Required[str]
    target_type: typing_extensions.Required[
        typing_extensions.Literal["channel", "contact"]
    ]


class _SerializerPostChatMigrationUsersIdentifierEventsBodyParamsItem(
    pydantic.BaseModel
):
    """
    Serializer for PostChatMigrationUsersIdentifierEventsBodyParamsItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    target_id: str = pydantic.Field(alias="target_id")
    target_type: typing_extensions.Literal["channel", "contact"] = pydantic.Field(
        alias="target_type"
    )


class PostChatMigrationUsersIdentifierEventsBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    method: typing_extensions.Required[typing_extensions.Literal["star"]]
    params: typing_extensions.Required[
        typing.List[PostChatMigrationUsersIdentifierEventsBodyParamsItem]
    ]


class _SerializerPostChatMigrationUsersIdentifierEventsBody(pydantic.BaseModel):
    """
    Serializer for PostChatMigrationUsersIdentifierEventsBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    method: typing_extensions.Literal["star"] = pydantic.Field(alias="method")
    params: typing.List[
        _SerializerPostChatMigrationUsersIdentifierEventsBodyParamsItem
    ] = pydantic.Field(alias="params")
