"""File Generated by Sideko (sideko.dev)"""

import io
import typing

from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GetChatChannelsChannelIdPinnedResponseMessagesItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    message_id: str = _PydanticField(alias="message_id")
    message_timestamp: int = _PydanticField(alias="message_timestamp")
    pinner_user_id: str = _PydanticField(alias="pinner_user_id")
    pinner_member_id: str = _PydanticField(alias="pinner_member_id")
    pinned_time: str = _PydanticField(alias="pinned_time")
    currently_pinned: bool = _PydanticField(alias="currently_pinned")
    message: str = _PydanticField(alias="message")
    pinned_by_external_user: bool = _PydanticField(alias="pinned_by_external_user")


class GetChatChannelsChannelIdPinnedResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    messages: typing.List[GetChatChannelsChannelIdPinnedResponseMessagesItem] = (
        _PydanticField(alias="messages")
    )
    next_page_token: typing.Optional[str] = _PydanticField(
        alias="next_page_token", default=None
    )
    channel_id: str = _PydanticField(alias="channel_id")
    page_size: typing.Optional[int] = _PydanticField(alias="page_size", default=None)
