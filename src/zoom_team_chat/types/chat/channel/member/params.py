"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostChatChannelsChannelIdMembersBodyMembersItem(typing_extensions.TypedDict):
    """
    No description specified
    """

    email: typing_extensions.Required[str]


class _SerializerPostChatChannelsChannelIdMembersBodyMembersItem(pydantic.BaseModel):
    """
    Serializer for PostChatChannelsChannelIdMembersBodyMembersItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    email: str = pydantic.Field(alias="email")


class PostChatChannelsChannelIdMembersBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    members: typing_extensions.NotRequired[
        typing.List[PostChatChannelsChannelIdMembersBodyMembersItem]
    ]


class _SerializerPostChatChannelsChannelIdMembersBody(pydantic.BaseModel):
    """
    Serializer for PostChatChannelsChannelIdMembersBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    members: typing.Optional[
        typing.List[_SerializerPostChatChannelsChannelIdMembersBodyMembersItem]
    ] = pydantic.Field(alias="members", default=None)
