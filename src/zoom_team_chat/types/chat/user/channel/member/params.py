"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostChatUsersUserIdChannelsChannelIdMembersBodyMembersItem(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    email: typing_extensions.Required[str]


class _SerializerPostChatUsersUserIdChannelsChannelIdMembersBodyMembersItem(
    pydantic.BaseModel
):
    """
    Serializer for PostChatUsersUserIdChannelsChannelIdMembersBodyMembersItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    email: str = pydantic.Field(alias="email")


class PostChatUsersUserIdChannelsChannelIdMembersBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    members: typing_extensions.NotRequired[
        typing.List[PostChatUsersUserIdChannelsChannelIdMembersBodyMembersItem]
    ]


class _SerializerPostChatUsersUserIdChannelsChannelIdMembersBody(pydantic.BaseModel):
    """
    Serializer for PostChatUsersUserIdChannelsChannelIdMembersBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    members: typing.Optional[
        typing.List[
            _SerializerPostChatUsersUserIdChannelsChannelIdMembersBodyMembersItem
        ]
    ] = pydantic.Field(alias="members", default=None)
