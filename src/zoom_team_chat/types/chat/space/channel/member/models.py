"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class DeleteChatSpacesSpaceIdMembersResponseUsersItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    user_id: str = _PydanticField(alias="user_id")
    member_id: str = _PydanticField(alias="member_id")
    is_external_user: bool = _PydanticField(alias="is_external_user")
    operation_status: typing_extensions.Literal["successful", "unsuccessful"] = (
        _PydanticField(alias="operation_status")
    )


class GetChatSpacesSpaceIdMembersResponseMembersItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    user_id: typing.Optional[str] = _PydanticField(alias="user_id", default=None)
    member_id: str = _PydanticField(alias="member_id")
    email: typing.Optional[str] = _PydanticField(alias="email", default=None)
    role: typing_extensions.Literal["member", "owner", "admin"] = _PydanticField(
        alias="role"
    )
    status: typing_extensions.Literal["active", "inactive"] = _PydanticField(
        alias="status"
    )
    first_name: str = _PydanticField(alias="first_name")
    last_name: str = _PydanticField(alias="last_name")
    display_name: str = _PydanticField(alias="display_name")
    is_external_user: bool = _PydanticField(alias="is_external_user")


class PostChatSpacesSpaceIdMembersResponseUsersItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    user_id: str = _PydanticField(alias="user_id")
    member_id: str = _PydanticField(alias="member_id")
    is_external_user: bool = _PydanticField(alias="is_external_user")
    operation_status: typing_extensions.Literal["successful", "unsuccessful"] = (
        _PydanticField(alias="operation_status")
    )


class DeleteChatSpacesSpaceIdMembersResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    successful_operations_count: int = _PydanticField(
        alias="successful_operations_count"
    )
    unsuccessful_operations_count: int = _PydanticField(
        alias="unsuccessful_operations_count"
    )
    users: typing.List[DeleteChatSpacesSpaceIdMembersResponseUsersItem] = (
        _PydanticField(alias="users")
    )


class GetChatSpacesSpaceIdMembersResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    next_page_token: typing.Optional[str] = _PydanticField(
        alias="next_page_token", default=None
    )
    page_size: typing.Optional[int] = _PydanticField(alias="page_size", default=None)
    members: typing.List[GetChatSpacesSpaceIdMembersResponseMembersItem] = (
        _PydanticField(alias="members")
    )


class PostChatSpacesSpaceIdMembersResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    successful_operations_count: int = _PydanticField(
        alias="successful_operations_count"
    )
    unsuccessful_operations_count: int = _PydanticField(
        alias="unsuccessful_operations_count"
    )
    users: typing.List[PostChatSpacesSpaceIdMembersResponseUsersItem] = _PydanticField(
        alias="users"
    )
