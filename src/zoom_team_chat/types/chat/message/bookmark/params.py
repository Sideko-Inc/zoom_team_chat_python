"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PatchChatMessagesBookmarksBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    action: typing_extensions.Required[
        typing_extensions.Literal["add_bookmark", "remove_bookmark"]
    ]
    to_channel: typing_extensions.NotRequired[str]
    to_contact: typing_extensions.NotRequired[typing.Union[str, str, str]]


class _SerializerPatchChatMessagesBookmarksBody(pydantic.BaseModel):
    """
    Serializer for PatchChatMessagesBookmarksBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    action: typing_extensions.Literal["add_bookmark", "remove_bookmark"] = (
        pydantic.Field(alias="action")
    )
    to_channel: typing.Optional[str] = pydantic.Field(alias="to_channel", default=None)
    to_contact: typing.Optional[typing.Union[str, str, str]] = pydantic.Field(
        alias="to_contact", default=None
    )
