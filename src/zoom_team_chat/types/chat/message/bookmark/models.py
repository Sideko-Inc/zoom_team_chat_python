"""File Generated by Sideko (sideko.dev)"""

import io
import typing

from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GetChatMessagesBookmarksResponseBookmarksItemObj0(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    channel_id: str = _PydanticField(alias="channel_id")
    channel_name: str = _PydanticField(alias="channel_name")
    message: str = _PydanticField(alias="message")
    message_id: str = _PydanticField(alias="message_id")
    message_timestamp: int = _PydanticField(alias="message_timestamp")
    sender_user_id: str = _PydanticField(alias="sender_user_id")
    sender_member_id: str = _PydanticField(alias="sender_member_id")
    sender_display_name: str = _PydanticField(alias="sender_display_name")
    is_sent_by_user: bool = _PydanticField(alias="is_sent_by_user")
    reply_main_message_id: typing.Optional[str] = _PydanticField(
        alias="reply_main_message_id", default=None
    )
    reply_main_message_timestamp: typing.Optional[int] = _PydanticField(
        alias="reply_main_message_timestamp", default=None
    )


class GetChatMessagesBookmarksResponseBookmarksItemObj1(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    peer_contact_name: str = _PydanticField(alias="peer_contact_name")
    peer_contact_user_id: str = _PydanticField(alias="peer_contact_user_id")
    peer_contact_member_id: str = _PydanticField(alias="peer_contact_member_id")
    message: str = _PydanticField(alias="message")
    message_id: str = _PydanticField(alias="message_id")
    message_timestamp: int = _PydanticField(alias="message_timestamp")
    is_sent_by_user: bool = _PydanticField(alias="is_sent_by_user")
    reply_main_message_id: typing.Optional[str] = _PydanticField(
        alias="reply_main_message_id", default=None
    )
    reply_main_message_timestamp: typing.Optional[int] = _PydanticField(
        alias="reply_main_message_timestamp", default=None
    )


class GetChatMessagesBookmarksResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    next_page_token: typing.Optional[str] = _PydanticField(
        alias="next_page_token", default=None
    )
    page_size: int = _PydanticField(alias="page_size")
    bookmarks: typing.List[
        typing.Union[
            GetChatMessagesBookmarksResponseBookmarksItemObj0,
            GetChatMessagesBookmarksResponseBookmarksItemObj1,
        ]
    ] = _PydanticField(alias="bookmarks")
