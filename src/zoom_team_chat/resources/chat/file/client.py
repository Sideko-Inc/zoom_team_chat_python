"""File Generated by Sideko (sideko.dev)"""

from zoom_team_chat.utils.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from zoom_team_chat.utils.request_options import RequestOptions, default_request_options
import typing
from zoom_team_chat.types.chat.file import models


class FileClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._client_wrapper = client_wrapper
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def get(
        self, *, file_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> models.GetChatFilesFileIdResponse:
        """
        Returns information about the chat file.

        **Scopes:** `chat:read`

        **Granular Scopes:** `team_chat:read:file`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._client_wrapper.request(
            method="GET",
            path=f"/chat/files/{file_id}",
            auth_names=["openapi_authorization", "openapi_oauth"],
            cast_to=models.GetChatFilesFileIdResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)

    def delete(
        self, *, file_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Deletes a chat file.

        **Scopes:** `chat:write`

        **Granular Scopes:** `team_chat:delete:file`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._client_wrapper.request(
            method="DELETE",
            path=f"/chat/files/{file_id}",
            auth_names=["openapi_authorization", "openapi_oauth"],
            cast_to=None,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncFileClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._client_wrapper = client_wrapper
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def get(
        self, *, file_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> models.GetChatFilesFileIdResponse:
        """
        Returns information about the chat file.

        **Scopes:** `chat:read`

        **Granular Scopes:** `team_chat:read:file`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._client_wrapper.request(
            method="GET",
            path=f"/chat/files/{file_id}",
            auth_names=["openapi_authorization", "openapi_oauth"],
            cast_to=models.GetChatFilesFileIdResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

    async def delete(
        self, *, file_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Deletes a chat file.

        **Scopes:** `chat:write`

        **Granular Scopes:** `team_chat:delete:file`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._client_wrapper.request(
            method="DELETE",
            path=f"/chat/files/{file_id}",
            auth_names=["openapi_authorization", "openapi_oauth"],
            cast_to=None,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
